#
# Default settings for the simulation
#

## Scenario settings
Scenario.name =  %%MovementModel.rngSeed%%PercentageMalicious%%Scenario.percentageOfDroppingNodes%%-%%Group.router%%Venice-%%Scenario.nrofHostGroups%%N%%Group.bufferSize%%B%%BlossomRouter.maxHeight%%H%%BlossomRouter.sleepTime%%S%%BlossomRouter.adjustmentParameter%%A%%BlossomRouter.cloakingEnabled%%C%%
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 43200s == 12h
Scenario.endTime = 172800

## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second)
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 250k
btInterface.transmitRange = 100

# High speed, long range, interface for group 4
highspeedInterface.type = SimpleBroadcastInterface
highspeedInterface.transmitSpeed = 10M
highspeedInterface.transmitRange = 1000

# Define 6 different node groups
Scenario.nrofHostGroups = 3

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement


# Common settings for all groups
Group.movementModel = ShortestPathMapBasedMovement
Group.router = BlossomRouter
#Group.router = FirstContactRouter
#Group.router = EpidemicRouter
#Group.router = ProphetRouter
Group.bufferSize = 5M
Group.waitTime = 0, 120
# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = btInterface
# Walking speeds
Group.speed = 0.5, 1.5
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 300

#Group.nrofHosts = 10

# group1 (pedestrians) specific settings
Group1.groupID = p
Group1.nrofHosts = 43

# group2 specific settings
Group2.groupID = c
# cars can drive only on roads
Group2.okMaps = 1
# 10-50 km/h
Group2.speed = 2.7, 13.9
Group2.nrofHosts = 4


# The Tram groups
Group3.groupID = t
Group3.bufferSize = 50M
Group3.movementModel = ShortestPathMapBasedMovement
Group3.waitTime = 10, 30
Group3.speed = 7, 10
Group3.nrofHosts = 3
Group3.nrofInterfaces = 1
Group3.interface1 = btInterface
Group3.interface2 = highspeedInterface



## Message creation parameters
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 25,35
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# range of message source/destination addresses
Events1.hosts = 0,50
# Message ID prefix
Events1.prefix = M


## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = [1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 1; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 3; 3; 3; 3; 3; 3; 3; 3; 3; 3; 3; 3; 4; 4; 4; 4; 4; 4; 4; 4; 4; 4; 4; 4; 5; 5; 5; 5; 5; 5; 5; 5; 5; 5; 5; 5]
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 10000, 10000
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 1

MapBasedMovement.mapFile1 = data/Venice.wkt


## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 2
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/Venice/AllSettings/50Nodes/
# Report classes to load
Report.report1 = MessageStatsReport
Report.report2 = ClusterStatsReport
#Report.report2 = ContactTimesReport

## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

#BlossomRouter.maxHeight = 0.1 for tests. Should not be higher then 0.5 through implementation of the cluster average.
BlossomRouter.maxHeight = [0.1; 0.1; 0.1; 0.1; 0.1; 0.1; 0.2; 0.2; 0.2; 0.2; 0.2; 0.2; 0.1; 0.1; 0.1; 0.1; 0.1; 0.1; 0.2; 0.2; 0.2; 0.2; 0.2; 0.2; 0.1; 0.1; 0.1; 0.1; 0.1; 0.1; 0.2; 0.2; 0.2; 0.2; 0.2; 0.2; 0.1; 0.1; 0.1; 0.1; 0.1; 0.1; 0.2; 0.2; 0.2; 0.2; 0.2; 0.2; 0.1; 0.1; 0.1; 0.1; 0.1; 0.1; 0.2; 0.2; 0.2; 0.2; 0.2; 0.2]
#BlossomRouter.maxHeight = 0.1
BlossomRouter.sleepTime = [0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0; 0.0; 10000.0; 20000.0]
#BlossomRouter.sleepTime = 10000.0
#BlossomRouter.sleepTime = 20000.0
#adjustmentParameter should be > 0.5 && =< 1
BlossomRouter.adjustmentParameter = [0.8; 0.8; 0.8; 1; 1; 1; 0.8; 0.8; 0.8; 1; 1; 1; 0.8; 0.8; 0.8; 1; 1; 1; 0.8; 0.8; 0.8; 1; 1; 1; 0.8; 0.8; 0.8; 1; 1; 1; 0.8; 0.8; 0.8; 1; 1; 1; 0.8; 0.8; 0.8; 1; 1; 1; 0.8; 0.8; 0.8; 1; 1; 1; 0.8; 0.8; 0.8; 1; 1; 1; 0.8; 0.8; 0.8; 1; 1; 1]
#BlossomRouter.adjustmentParameter = 0.8
BlossomRouter.cloakingEnabled = false

#Malicious nodes in percentage:
Scenario.percentageOfDroppingNodes = 0


## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
#GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$